version: "3"

services:

  nginx:
    build:
      context: ./nginx-docker
      dockerfile: Dockerfile
    image: sh-nginx
    container_name: sh-nginx
    ports:
      - "80:80"
      - "443:443"
    privileged: true #是否让docker 应用容器 获取宿主机root权限（特殊权限）
    restart: on-failure #失败重启
    networks:
      - mynet #加入"mynet"网络
    volumes:
      - /data/smart-home/nginx/html:/nginx/html
      - /data/smart-home/nginx/files:/nginx/files
      - /data/smart-home/nginx/logs:/nginx/logs
    depends_on:
      - redis
      - nacos
      - app-oauth2
      - app
      - web
      - voice-alexa-web
      - voice-google-web

  redis:
    build:
      context: ./redis-docker
      dockerfile: Dockerfile
    image: sh-redis
    container_name: sh-redis
    expose:
      - "6379"
    restart: on-failure
    networks:
      - mynet
    volumes:
      - redis-data:/data

  nacos:
    build:
      context: ./nacos-docker
      dockerfile: Dockerfile
    image: sh-nacos
    container_name: sh-nacos
    ports:
      - "8848:8848"
    environment:
      - MODE=standalone
    restart: on-failure
    networks:
      - mynet

  app-oauth2:
    build:
      context: ./app-oauth2
      dockerfile: Dockerfile
    image: sh-app-oauth2
    container_name: sh-app-oauth2
    expose:
      - "80"
    restart: on-failure
    networks:
      - mynet
    volumes:
      - /data/smart-home/app-oauth2/logs:/logs
    depends_on:
      - nacos

  web-oauth2:
    build:
      context: ./web-oauth2
      dockerfile: Dockerfile
    image: sh-web-oauth2
    container_name: sh-web-oauth2
    expose:
      - "80"
    restart: on-failure
    networks:
      - mynet
    volumes:
      - /data/smart-home/web-oauth2/logs:/logs
    depends_on:
      - nacos

  app:
    build:
      context: ./smart-home-app
      dockerfile: Dockerfile
    image: sh-app
    container_name: sh-app
    expose:
      - "80"
    restart: on-failure
    networks:
      - mynet
    volumes:
      - /data/smart-home/app/logs:/logs
    depends_on:
      - nacos
      - service
      - app-oauth2

  web:
    build:
      context: ./smart-home-service
      dockerfile: Dockerfile
    image: sh-web
    container_name: sh-web
    expose:
      - "80"
    restart: on-failure
    networks:
      - mynet
    volumes:
      - /data/smart-home/web/logs:/logs
    depends_on:
      - service
      - nacos
      - web-oauth2

  voice-google-web:
    build:
      context: ./smart-home-voice-google-web
      dockerfile: Dockerfile
    image: sh-voice-google-web
    container_name: sh-voice-google-web
    expose:
      - "80"
    restart: on-failure
    networks:
      - mynet
    volumes:
      - /data/smart-home/voice-google-web/logs:/logs
    depends_on:
      - service
      - nacos
      - app-oauth2

  voice-alexa-web:
    build:
      context: ./smart-home-voice-alexa-web
      dockerfile: Dockerfile
    image: sh-voice-alexa-web
    container_name: sh-voice-alexa-web
    expose:
      - "80"
    restart: on-failure
    networks:
      - mynet
    volumes:
      - /data/smart-home/voice-alexa-web/logs:/logs
    depends_on:
      - service
      - nacos
      - app-oauth2

  service:
    build:
      context: ./smart-home-service
      dockerfile: Dockerfile
    image: sh-service
    container_name: sh-service
    expose:
      - "80"
    restart: on-failure
    networks:
      - mynet
    volumes:
      - /data/smart-home/service/logs:/logs
    depends_on:
      - app-oauth2
      - nacos
      - xxl-job-admin

  xxl-job-admin:
    build:
      context: ./xxl-job-admin
      dockerfile: Dockerfile
    image: sh-xxl-job-admin
    container_name: sh-xxl-job-admin
    expose:
      - "80"
    restart: on-failure
    networks:
      - mynet
    volumes:
      - /data/smart-home/xxl-job-admin/logs:/logs

volumes:
  redis-data:

networks:
  mynet:
    external: true

