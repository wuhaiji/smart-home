version: "3"

services:

  nginx:
    # 配置docker容器日志文件
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    build:
      context: ./nginx-docker
      dockerfile: Dockerfile
    image: sh-nginx
    container_name: sh-nginx
    ports:
      - "80:80"
      - "443:443"
    privileged: true #是否让docker 应用容器 获取宿主机root权限（特殊权限）
    restart: on-failure #失败重启
    networks:
      - mynet #加入"mynet"网络
    volumes:
      - /data/smart-home/nginx/html:/nginx/html
      - /data/smart-home/nginx/logs:/var/log/nginx
      - /data/smart-home/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - redis
      - nacos
      - app-oauth2
      - app
      - web
      - voice-alexa-web
      - voice-google-web

  redis:
    # 配置docker容器日志文件
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    build:
      context: ./redis-docker
      dockerfile: Dockerfile
    image: sh-redis
    container_name: sh-redis
    privileged: true #是否让docker 应用容器 获取宿主机root权限（特殊权限）
    expose:
      - "6379"
    restart: always
    networks:
      - mynet
    volumes:
      - /data/smart-home/redis/data:/data
      - /data/smart-home/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf

  nacos:
    # 配置docker容器日志文件
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    image: nacos/nacos-server
    container_name: sh-nacos
    privileged: true
    ports:
      - "8848:8848"
    environment:
      - MODE=standalone
      - JVM_XMS=256m
      - JVM_XMX=256m
      - JVM_XMN=128m
    restart: always
    volumes:
      - /data/smart-home/nacos/custom.properties:/home/nacos/init.d/custom.properties
      - /data/smart-home/nacos/logs:/home/nacos/logs
    networks:
      - mynet


  emqx:
    # 配置docker容器日志文件
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    image: emqx/emqx:latest
    container_name: sh-emqx
    mem_limit: 512m
    environment:
      EMQX_LISTENER__TCP__EXTERNAL: 1883
      EMQX_LISTENER__WS__EXTERNAL: 8083
    restart: on-failure
    networks:
      - mynet
    expose:
      - 1883
    ports:
      - "11113:1883"
      - "15672:18083"

  app-oauth2:
    # 配置docker容器日志文件
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "3"
    build:
      context: ./app-oauth2
      dockerfile: Dockerfile
    image: sh-app-oauth2
    privileged: true
    container_name: sh-app-oauth2
    mem_limit: 388m
    # MaxRAMPercentage=80.0:设置jvm使用容器最大内存(mem_limit)的80%
    entrypoint: [
        "java",
        "-server",
        "-XX:+UnlockExperimentalVMOptions",
        "-XX:+UseCGroupMemoryLimitForHeap",
        "-XX:MaxRAMPercentage=80.0",
        "-XX:+HeapDumpOnOutOfMemoryError",
        "-XX:HeapDumpPath=/logs/HeapDump",
        "-jar",
        "/app.jar"
    ]
    command: mkdir /logs && mkdir /logs/HeapDump && apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/* && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
    environment:
      LANG: en_US.utf8
    expose:
      - "80"
    restart: always
    networks:
      - mynet
    volumes:
      - /data/smart-home/app-oauth2/logs:/logs
    depends_on:
      - nacos
      - redis

  web-oauth2:
    # 配置docker容器日志文件
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "3"
    build:
      context: ./web-oauth2
      dockerfile: Dockerfile
    image: sh-web-oauth2
    privileged: true
    container_name: sh-web-oauth2
    mem_limit: 388m
    # MaxRAMPercentage=80.0:设置jvm使用容器最大内存(mem_limit)的80%
    entrypoint: [
        "java",
        "-server",
        "-XX:+UnlockExperimentalVMOptions",
        "-XX:+UseCGroupMemoryLimitForHeap",
        "-XX:MaxRAMPercentage=80.0",
        "-XX:+HeapDumpOnOutOfMemoryError",
        "-XX:HeapDumpPath=/logs/HeapDump",
        "-jar",
        "/app.jar"
    ]
    command: mkdir /logs && mkdir /logs/HeapDump
    expose:
      - "80"
    restart: always
    networks:
      - mynet
    volumes:
      - /data/smart-home/web-oauth2/logs:/logs
    depends_on:
      - nacos
      - redis

  app:
    # 配置docker容器日志文件
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "3"
    build:
      context: ./smart-home-app
      dockerfile: Dockerfile
    image: sh-app
    container_name: sh-app
    mem_limit: 512m
    # MaxRAMPercentage=80.0:设置jvm使用容器最大内存(mem_limit)的80%
    entrypoint: [
        "java",
        "-server",
        "-XX:+UnlockExperimentalVMOptions",
        "-XX:+UseCGroupMemoryLimitForHeap",
        "-XX:MaxRAMPercentage=80.0",
        "-XX:+HeapDumpOnOutOfMemoryError",
        "-XX:HeapDumpPath=/logs/HeapDump",
        "-jar",
        "/app.jar"
    ]
    command: mkdir /logs && mkdir /logs/HeapDump
    privileged: true
    expose:
      - "80"
    restart: always
    networks:
      - mynet
    volumes:
      - /data/smart-home/app/logs:/logs
    depends_on:
      - nacos
      - service
      - app-oauth2
      - redis

  web:
    # 配置docker容器日志文件
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "3"
    build:
      context: ./smart-home-web
      dockerfile: Dockerfile
    image: sh-web
    container_name: sh-web
    mem_limit: 388m
    # MaxRAMPercentage=80.0:设置jvm使用容器最大内存(mem_limit)的80%
    entrypoint: [
        "java",
        "-server",
        "-XX:+UnlockExperimentalVMOptions",
        "-XX:+UseCGroupMemoryLimitForHeap",
        "-XX:MaxRAMPercentage=80.0",
        "-XX:+HeapDumpOnOutOfMemoryError",
        "-XX:HeapDumpPath=/logs/HeapDump",
        "-jar",
        "/app.jar"
    ]
    command: mkdir /logs && mkdir /logs/HeapDump
    privileged: true
    expose:
      - "80"
    restart: always
    networks:
      - mynet
    volumes:
      - /data/smart-home/web/logs:/logs
    depends_on:
      - service
      - nacos
      - web-oauth2
      - redis

  voice-google-web:
    # 配置docker容器日志文件
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "3"
    build:
      context: ./smart-home-voice-google-web
      dockerfile: Dockerfile
    image: sh-voice-google-web
    container_name: sh-voice-google-web
    mem_limit: 256m
    # MaxRAMPercentage=80.0:设置jvm使用容器最大内存(mem_limit)的80%
    entrypoint: [
        "java",
        "-server",
        "-XX:+UnlockExperimentalVMOptions",
        "-XX:+UseCGroupMemoryLimitForHeap",
        "-XX:MaxRAMPercentage=80.0",
        "-XX:+HeapDumpOnOutOfMemoryError",
        "-XX:HeapDumpPath=/logs/HeapDump",
        "-jar",
        "/app.jar"
    ]
    command: mkdir /logs && mkdir /logs/HeapDump
    privileged: true
    expose:
      - "80"
    restart: always
    networks:
      - mynet
    volumes:
      - /data/smart-home/voice-google-web/logs:/logs
    depends_on:
      - service
      - nacos
      - app-oauth2
      - redis

  voice-alexa-web:
    # 配置docker容器日志文件
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "3"
    build:
      context: ./smart-home-voice-alexa-web
      dockerfile: Dockerfile
    image: sh-voice-alexa-web
    container_name: sh-voice-alexa-web
    mem_limit: 256m
    # MaxRAMPercentage=80.0:设置jvm使用容器最大内存(mem_limit)的80%
    entrypoint: [
        "java",
        "-server",
        "-XX:+UnlockExperimentalVMOptions",
        "-XX:+UseCGroupMemoryLimitForHeap",
        "-XX:MaxRAMPercentage=80.0",
        "-XX:+HeapDumpOnOutOfMemoryError",
        "-XX:HeapDumpPath=/logs/HeapDump",
        "-jar",
        "/app.jar"
    ]
    command: mkdir /logs && mkdir /logs/HeapDump
    privileged: true
    expose:
      - "80"
    restart: always
    networks:
      - mynet
    volumes:
      - /data/smart-home/voice-alexa-web/logs:/logs
    depends_on:
      - service
      - nacos
      - app-oauth2
      - redis

  service:
    # 配置docker容器日志文件
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "3"
    build:
      context: ./smart-home-service
      dockerfile: Dockerfile
    image: sh-service
    mem_limit: 1g
    # MaxRAMPercentage=80.0:设置jvm使用容器最大内存(mem_limit)的80%
    entrypoint: [
        "java",
        "-server",
        "-XX:+UnlockExperimentalVMOptions",
        "-XX:+UseCGroupMemoryLimitForHeap",
        "-XX:MaxRAMPercentage=80.0",
        "-XX:+HeapDumpOnOutOfMemoryError",
        "-XX:HeapDumpPath=/logs/HeapDump",
        "-jar",
        "/app.jar"
    ]
    command: mkdir /logs && mkdir /logs/HeapDump
    container_name: sh-service
    privileged: true
    expose:
      - "80"
    restart: always
    networks:
      - mynet
    volumes:
      - /data/smart-home/service/logs:/logs
    depends_on:
      - app-oauth2
      - nacos
      - xxl-job-admin
      - redis
      - emqx

  xxl-job-admin:
    # 配置docker容器日志文件
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
        max-file: "3"
    build:
      context: ./xxl-job-admin
      dockerfile: Dockerfile
    image: sh-xxl-job-admin
    container_name: sh-xxl-job-admin
    mem_limit: 512m
    # MaxRAMPercentage=80.0:设置jvm使用容器最大内存(mem_limit)的80%
    entrypoint: [
        "java",
        "-server",
        "-XX:+UnlockExperimentalVMOptions",
        "-XX:+UseCGroupMemoryLimitForHeap",
        "-XX:MaxRAMPercentage=80.0",
        "-XX:+HeapDumpOnOutOfMemoryError",
        "-XX:HeapDumpPath=/logs/HeapDump",
        "-jar",
        "/app.jar"
    ]
    command: mkdir /logs && mkdir /logs/HeapDump
    privileged: true
    expose:
      - "80"
    restart: always
    networks:
      - mynet
    volumes:
      - /data/smart-home/xxl-job-admin/logs:/logs

networks:
  mynet:
    external: true

